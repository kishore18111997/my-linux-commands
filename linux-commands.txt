1) pwd
- to show the path of current directory
 
2) ls 
- to list the contents of the present directory

3) ls -la
- to list all the contents including hidden files of the present directory

4) ls -l
- to list the contents along with ownership details of the present directory

5) cd newfolder
- to open newfolder

6) start image.jpg
- to open a image called image.jpg (this command can be used to open media files)

7) cat index.html
- to show the contents of the file on the terminal

8) cd ..
- to get back to the previous folder

9) mkdir newfolder
- to create newfolder 

10) rmdir newfolder
- to delete newfolder

11) rm index.html
- to delete a file called index.html

12) touch index.html
- to create a new file called index.html

13) vi, vim, nano index.html
- to open the file index.html in respective editors vi or vim or nano 

14) cntrl + c
- to abort a ongoing command

15) &&
- use this in the middle of 2 commands to execute at a time


15.1) ;
- use this in the middle of 2 commands to execute at a time, this works even if any of the command is invalid

16) cp index.html /home/ubuntu/newfolder
- to copy file index.html to path /home/ubuntu/newfolder

17) mv index.html /home/ubuntu/newfolder
- to move file index.html to path /home/ubuntu/newfolder

18) df -h 
- to show the memory utilization of the system

19) zip -r folder index.html web.html
- top zip the files index.html and web.html to folder

20) rm -r oldfolder
- to forcefully delete a folder that is not empty

21) tar -zvxf folder.zip
- to unzip folder.zip

22) find/ -name foldername
- to find a file or folder called foldername

23) useradd -m -d /home/user1 user1
- to add a user called user1 in a location /home/user1

24)useradd -m user1
- to add a user called user1

25) passwd user1
- to create a password for user1

26) sudo usermod -aG sudo user1
- to add the user user1 to sudo group

27) sudo su user1
- to login as user1

28) sudo su
- to login as root user

29) ssh-keygen
- to create a ssh keypair

30) ssh-copy-id -i /home/ubuntu/.ssh/authorized_keys user2@192.168.33.20
- to copy public key to another system of ID user2@192.168.33.20

32) ssh-keygen -t ed25519 -C user1
- to create a ssh keypair of algorithm ed25519 

33) chmod a+x hello.sh
- to change tthe mod of hello.sh

34) chown user1 index.html
- to give the owership of index.html to user1

35) chown .sudo index.html
- to change the owership of index.html to sudo group

36) chgrp sudo index.html
- to change the owership of index.html to sudo group

37) sudo systemctl start sevicename
- to start a service

38) sudo systemctl restart sevicename
- to restart a service

39) sudo systemctl enable sevicename
- to start a service as soon as i login to the system

40) which servicename
- to show the executable path of the installed service name

41) locate filename
- to search the file (you need to install a s/w called plocate : sudo apt install plocate)

42) sudo useradd -m -d /home/kishore kishore
- to add a user and add a default path to that user

43) sudo passwd kishore
- to add a password to that user

44) sudo usermod -aG sudo kishore
- to add user to sudo mode

45) sudo su kishore
- to checkout ro kishore user

46) sudo chown -R dockeradmin:dockeradmin /home/docker/file.txt
- to change the ownership of the file.txt to dockeradmin group and dockeradmin user

47) update-alternatives --config application_name
- to change application_name to a different version if already installed



48) [grep commands]



48.1) grep kishore -r mail.txt 
- this command finds all the string called kishore in mail.txt file and displays on the terminal

48.2) grep kishore -r * 
- this command finds all the string called kishore in all the files present in the system and displays on the terminal

48.3) grep kishore -r -i mail.txt
- this command finds all the string called kishore(including case sensitiveness) in mail.txt file and displays on the terminal

48.4) grep kishore -r * > output.txt
- this command finds all the string called kishore in all the files present in the system and paste the result in a file called output.txt

48.5) cat file.txt | wc -l
- to check how many lines are there in file.txt

48.6) grep kishore -r -i -v mail.txt
- displays all the lines that do not contain kishore string from file called mail.txt

48.7) grep kishore -n -i mail.txt
- displays all the lines including the line number that contain kishore in the file called mail.txt

48.8) grep kishore -c mail.txt
- displays the count of word kishore in a file called mail.txt



49) [awk commands]



49.1) awk '{print $1}' file.txt
- displays all first column contents present in a file called file.txt, "spaces" in file.txt is being treated as column seperator by default

49.2) awk '{print $NF}' file.txt
- displays all last column contents present in a file called file.txt

49.3) awk -F 'a' '{print $1}' file.txt
- displays all first column contents present in a file called file.txt, each letter called 'a' in file.txt is being treated as column seperator here 

49.4) awk '{print $1 $2}' file.txt
- to show all the contents of column 1 and column2 from file.txt

49.5) awk '{print $1"\t"$2}' file.txt
- to show all the contents of column 1 and column2 with a tab space from file.txt

49.6) awk '{print $1}' file.txt | uniq
- displays all the unique first column contents present in a file called file.txt

49.7) df -h | awk '{print $1"\t"$2"\t"$4}'
- you can also run awk on other command outputs using piping
- this command shows the contents of column 1,2,4 from the output of df -h command



50) [sed commands]



50.1) sed 's/rama/bhima/' mail.txt
- this command will display all the string from the file called mail.txt by replacing a string called rama into bhima but does not changge it in the file

50.2) sed -i 's/rama/bhima/' mail.txt
- this command will change all words called rama into bhima in mail.txt file and keep the changes

51) uptime
- shows the age of the system, also shows the number of users logged in at the present time

52) wall hello 
- broadcasts a message called hello to all logged users

53) who 
- shows all the users logged into the machine

54) free
- displays all storage details of the system

55) sort file.txt
- displays all the lines of the file in descending order

56) sort -r file.txt
- displays all the lines of the file in ascending order

57) shutdown -h now
- shutsdown the system


58) shutdown -r now
- restarts the system

59) man ls 
- gives more details of ls command(cant execute on all commands)

60) tail -n 5 file.txt
- displays last 5 lines of file.txt

61) head -n 5 file.txt
- displays first 5 lines of file.txt

62) ln -s /etc/sudo/sudoers.config /home/ubuntu/
- creates a shortcut of /etc/sudo/sudoers.config in a path called /home/ubuntu/    [SOFT LINK or SYMBOLIC LINK]

62) ln /etc/sudo/sudoers.config /home/ubuntu/new_link
- creates a shortcut of /etc/sudo/sudoers.config in a path called /home/ubuntu/ and names that shortcut as new_link   [HARD LINK]

63) find /home/ubuntu -name "*.txt"
- displays all files from /home/ubuntu directory that ends with .txt prefix

63) find /home/ubuntu -name "*.txt" | grep -v .hidden
- displays all files from /home/ubuntu directory that ends with .txt prefix by ignoring the files that has .hidden string in its absolute path

64) find -name kishore -type f
- displays all files named as kishore ["f" for file in type]

64) find -name kishore -type d
- displays all directories named as kishore ["d" for directory in type]

65) find -type f -name image2021*.jpg -exec rm {} +
- finds all files named as image2021*.jpg and deletes all of them

66) find -type f -name image2021*.jpg -exec chmod -R root:root {} +
- finds all files named as image2021*.jpg and performs "chmod -R root:root" command on each file 

67) history
- gives the history of all the commands that are run

68) ctrl + r
- can search any commands that is present in run history by searching its name

69) sudo !!
- runs the last executed command by adding sudo to it

70) truncate -s 0 file.txt
- empties  the content of file.txt

71) whoami 
- displays the name of user you are logged in as

72) ctrl + z
- executes the running job in background

73) jobs
- shows details of all jobs running in background

74) fg 1
- brings back the job number 1 that is running in background to foreground

76 > file.txt
- puts a empty content into file.txt, thereby emptying it

77) sudo systemctl stop iptables
- to stop the default firewall in linux

78) sudo systemctl start iptables
- to start the default firewall in linux

79) sudo systemctl start firewalld
- to start firewall in linux

80) sudo systemctl stop firewalld
- to stop firewall in linux

81) uname -r 
- to check the kerenel ID of linux machine



82) [tar commands]    if any commands are not working please add -v tag along with the tag v for verbose



82.1) tar -cf foldername
- creates a zip folder for a folder called foldername [c for create, f for specify filename]

82.2) tar -czf foldername
- to create a compressed zip folder for a folder called foldername

82.3) tar -tf foldername.tar
- to show the contents of foldername.tar

82.4) tar -xf foldername.tar 
- to extract foldername.tar

82.5) tar -xf foldername.tar -C /home/ubuntu/extractfolder
- to extract foldername.tar to a path called /home/ubuntu/extractfolder
 
83.6) tar -xzf foldename.gz
- to extract a compressed folder called foldername.gz

84.7) tar -uvf foldername.tar newfile.txt
- to update the new file called newfile.txt to foldername.tar

84.8) tar -rvf foldername.tar oldfile.txt
- to remove the file called oldfile.txt from foldername.txt 



85) tac file.txt
- to show the contents of a file in reverse order

86) lp file.txt 
- to print the contents of file.txt
























